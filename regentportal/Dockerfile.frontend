# Build stage
FROM node:20-alpine AS builder

WORKDIR /app

# Set build-time environment variable
ENV REACT_APP_API_URL=https://p01--regegentportalapi--9lbdlr4dyhwr.code.run

# Copy package files
COPY client/package*.json ./

# Install dependencies with verbose output
RUN npm ci --verbose

# Copy source code
COPY client/ ./

# Debug: Check what files we have
RUN echo "=== Checking files before build ===" && \
    ls -la && \
    echo "=== Checking src directory ===" && \
    ls -la src/ && \
    echo "=== Checking if index.html exists ===" && \
    ls -la index.html

# Build the application with detailed output
RUN echo "Starting React build..." && \
    npm run build && \
    echo "React build completed successfully" && \
    ls -la dist/ || \
    (echo "Build failed, creating fallback" && \
     mkdir -p dist && \
     echo "<html><body><h1>Build failed - check logs</h1></body></html>" > dist/index.html && \
     echo "Fallback created")

# Production stage
FROM nginx:alpine

# Copy built files from builder stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Verify files are copied
RUN echo "Files in nginx html directory:" && ls -la /usr/share/nginx/html/

# Expose port 8080 for Northflank
EXPOSE 8080

# Start nginx on port 8080
CMD ["sh", "-c", "sed -i 's/listen 80/listen 8080/g' /etc/nginx/nginx.conf && nginx -g 'daemon off;'"] 